services:
  archon-pyserver:
    build: ./python
    container_name: archon-pyserver
    ports:
      - "8080:8080"
      - "8051:8051"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - HOST=${HOST:-localhost}
      - PORT=${PORT:-8051}
      - TRANSPORT=${TRANSPORT:-sse}
      - MODEL_CHOICE=${MODEL_CHOICE:-gpt-4o-mini}
      - USE_CONTEXTUAL_EMBEDDINGS=${USE_CONTEXTUAL_EMBEDDINGS:-false}
      - USE_HYBRID_SEARCH=${USE_HYBRID_SEARCH:-false}
      - USE_AGENTIC_RAG=${USE_AGENTIC_RAG:-false}
      - USE_RERANKING=${USE_RERANKING:-false}
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/mcp/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./python/src:/app/src
      - ./python/tests:/app/tests

  frontend:
    build: ./archon-ui-main
    ports:
      - "3737:5173"
    environment:
      - VITE_API_URL=http://localhost:8080
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./archon-ui-main/src:/app/src
      - ./archon-ui-main/public:/app/public
    depends_on:
      - archon-pyserver

  docs:
    build:
      context: ./docs
      dockerfile: Dockerfile
    ports:
      - "3838:80"
    networks:
      - app-network
    depends_on:
      - archon-pyserver
      - frontend

networks:
  app-network:
    driver: bridge

volumes:
  node_modules:
  python_cache:
